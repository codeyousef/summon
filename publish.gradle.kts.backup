// Enhanced Publishing Configuration
publishing {
    publications {
        // Publications are automatically created by the Kotlin Multiplatform plugin
        withType<MavenPublication> {
            // Configure common metadata for all publications
            pom {
                name.set("Summon")
                description.set("A Kotlin Multiplatform UI framework for building web applications")
                url.set("https://github.com/codeyousef/summon") // Update with your actual GitHub URL
                
                licenses {
                    license {
                        name.set("MIT License")
                        url.set("https://opensource.org/licenses/MIT")
                    }
                }
                
                developers {
                    developer {
                        id.set("yousef")
                        name.set("Yousef") // Update with your actual name
                        email.set("publishing.rental535@passmail.net") // Update with your email
                    }
                }
                
                scm {
                    connection.set("scm:git:git://github.com/codeyousef/summon.git")
                    developerConnection.set("scm:git:ssh://github.com/codeyousef/summon.git")
                    url.set("https://github.com/codeyousef/summon")
                }
            }
        }
    }
    
    repositories {
        // Maven Central (New Central Portal)
        maven {
            name = "central"
            val releasesUrl = uri("https://central.sonatype.com/api/v1/publisher/deployments/")
            val snapshotsUrl = uri("https://central.sonatype.com/api/v1/publisher/deployments/")
            url = if (version.toString().endsWith("SNAPSHOT")) snapshotsUrl else releasesUrl
            
            credentials {
                username = project.findProperty("centralUsername") as String? ?: System.getenv("CENTRAL_USERNAME")
                password = project.findProperty("centralPassword") as String? ?: System.getenv("CENTRAL_PASSWORD")
            }
        }
        
        // GitHub Packages (alternative)
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/codeyousef/summon") // Update with your GitHub username/repo
            credentials {
                username = project.findProperty("gpr.user") as String? ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") as String? ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

// Configure signing for Maven Central
if (project.hasProperty("signing.keyId")) {
    apply(plugin = "signing")
    configure<SigningExtension> {
        sign(publishing.publications)
    }
}

// Javadoc JAR task for Maven Central compliance
tasks.register<Jar>("javadocJar") {
    archiveClassifier.set("javadoc")
    from("$projectDir/docs") // You can put documentation here
}

// Sources JAR is automatically created by Kotlin Multiplatform plugin
// But you can customize it if needed
tasks.withType<AbstractPublishToMaven> {
    dependsOn(tasks.withType<Sign>())
}
