# Basic settings
quarkus.application.name=SummonExample
quarkus.http.port=8081
quarkus.http.host=0.0.0.0

# Simple logging configuration
quarkus.log.console.enable=true
quarkus.log.console.level=DEBUG
quarkus.log.console.color=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{1.}] %s%e%n

# Add file logging for debugging
quarkus.log.file.enable=true
quarkus.log.file.path=quarkus-debug.log
quarkus.log.file.level=DEBUG
quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{1.}] %s%e%n

# Display the banner
quarkus.banner.enabled=true

# Force very verbose logging
quarkus.log.level=DEBUG

# Let DevServices handle the PostgreSQL container automatically
# No manual datasource configuration needed

# Set up all categories to ensure we see logging
quarkus.log.category."io.quarkus".level=DEBUG
quarkus.log.category."org.jboss.resteasy".level=DEBUG
quarkus.log.category."io.netty".level=DEBUG
quarkus.log.category."code.yousef".level=DEBUG
quarkus.log.category."org.testcontainers".level=DEBUG
quarkus.log.category."com.github.dockerjava".level=DEBUG

# Very important for development
quarkus.live-reload.password=${QUARKUS_LIVE_RELOAD_PASSWORD:changeme}
quarkus.live-reload.url=http://localhost:8081

# Disable metrics to avoid interference
quarkus.arc.remove-unused-beans=false

# Development mode configuration
quarkus.live-reload.instrumentation=true

# Disable the WebServlet implementation to prioritize JAX-RS
quarkus.servlet.context-path=/
quarkus.default-route.enabled=false

# Explicitly enable REST
quarkus.resteasy-reactive.path=/

# TestContainers specific configurations to fix connection issues
quarkus.testcontainers.ryuk.disabled=true

# Windows-specific Docker configuration - fixes ClosedChannelException
quarkus.docker.socket-path=npipe:////./pipe/docker_engine

# System property overrides for Testcontainers
quarkus.jvm.args=-Dtestcontainers.reuse.enable=true -Dtestcontainers.ryuk.disabled=true -Ddocker.client.strategy=org.testcontainers.dockerclient.WindowsClientProviderStrategy -Ddocker.host=npipe:////./pipe/docker_engine