name: Publish to Maven Central
on:
  release:
    types: [created]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Extract and Verify Version
        id: version
        run: |
          VERSION=$(grep "^version" build.gradle.kts | cut -d'"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"
          
          # Check if this version already exists in GitHub Packages
          if curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/repos/${{ github.repository }}/packages/maven/io.github.codeyousef.summon/versions" | \
               grep -q "\"name\":\"$VERSION\""; then
            echo "::error::Version $VERSION already exists in GitHub Packages. Please update the version in build.gradle.kts"
            exit 1
          fi
      
      - name: Build and Test
        run: ./gradlew build
      
      - name: Verify Maven Central Credentials
        run: |
          echo "Verifying Maven Central credentials..."
          if [ -z "${{ secrets.MAVEN_CENTRAL_USERNAME }}" ]; then
            echo "::error::MAVEN_CENTRAL_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.MAVEN_CENTRAL_PASSWORD }}" ]; then
            echo "::error::MAVEN_CENTRAL_PASSWORD secret is not set"
            exit 1
          fi
          echo "✅ Credentials are configured"
      
      - name: Verify Signing Configuration
        run: |
          echo "Verifying signing configuration..."
          if [ -z "${{ secrets.SIGNING_KEY_ID }}" ]; then
            echo "::error::SIGNING_KEY_ID secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SIGNING_PASSWORD }}" ]; then
            echo "::error::SIGNING_PASSWORD secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.GPG_KEY_CONTENTS }}" ]; then
            echo "::error::GPG_KEY_CONTENTS secret is not set"
            exit 1
          fi
          echo "✅ Signing configuration is complete"
      
      - name: Publish to Maven Central and GitHub Packages
        run: |
          ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
          ./gradlew publishAllPublicationsToGitHubPackagesRepository
        env:
          # Maven Central credentials
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          # Signing configuration
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
          # Additional signing properties for vanniktech plugin
          ORG_GRADLE_PROJECT_signing.keyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signing.password: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signing.key: ${{ secrets.GPG_KEY_CONTENTS }}
          # GitHub token for GitHub Packages
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}